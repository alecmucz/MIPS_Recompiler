#ifndef TOKEN_TYPE_H
#define TOKEN_TYPE_H

typedef enum {
  // R-TYPE INSTRUCTIONS (Register)
  TOKEN_ADD,
  TOKEN_ADDU,
  TOKEN_SUB,
  TOKEN_SUBU,
  TOKEN_AND,
  TOKEN_OR,
  TOKEN_XOR,
  TOKEN_NOR,
  TOKEN_SLL,
  TOKEN_SRL,
  TOKEN_SRA,
  TOKEN_SLLV,
  TOKEN_SRLV,
  TOKEN_SRAV,
  TOKEN_SLT,
  TOKEN_SLTU,
  TOKEN_MULT,
  TOKEN_MULTU,
  TOKEN_DIV,
  TOKEN_DIVU,
  TOKEN_MFHI,
  TOKEN_MFLO,
  TOKEN_MOVN,
  TOKEN_MOVZ,
  TOKEN_MTC0,
  TOKEN_MFC0,
  // I-TYPE INSTRUCTIONS (IMMEDIATE)
  TOKEN_ADDI,
  TOKEN_ADDIU,
  TOKEN_ANDI,
  TOKEN_ORI,
  TOKEN_XORI,
  TOKEN_SLTI,
  TOKEN_SLTIU,
  TOKEN_LUI,
  // J-TYPE INSTRUCTIONS (JUMP)
  TOKEN_JR,
  TOKEN_J,
  TOKEN_JAL,
  TOKEN_JALR,
  TOKEN_JIALC,
  TOKEN_JRHB,
  // MEMORY REFERENCE INSTRUCTIONS (LOAD/STORE)
  TOKEN_LW,
  TOKEN_LH,
  TOKEN_LHU,
  TOKEN_LB,
  TOKEN_LBU,
  TOKEN_SW,
  TOKEN_SH,
  TOKEN_SB,
  TOKEN_LWL,
  TOKEN_LWR,
  TOKEN_SWL,
  TOKEN_SWR,
  // CONDITIONAL INSTRUCTIONS (BRANCH)
  TOKEN_BEQ,
  TOKEN_BNE,
  TOKEN_BLEZ,
  TOKEN_BGTZ,
  TOKEN_BLTZ,
  TOKEN_BGEZ,
  // FLOATING POINT INSTRUCTIONS
  TOKEN_ADDS,
  TOKEN_SUBS,
  TOKEN_MULS,
  TOKEN_DIVS,
  TOKEN_CVTSW,
  // SYSTEM CALL INSTRUCTIONS (SYSCALLS)
  TOKEN_SYSCALL,
  TOKEN_BREAK,
  // ATOMIC INSTRUCTIONS (SYNC)
  //TOKEN_LL,
  //TOKEN_SC,
  //TOKEN_SYNC
  // EXTRA
  TOKEN_UNKNOWN
} TokenType;

#endif 
